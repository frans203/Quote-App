{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","authorInputState","setAuthorInputState","textInputState","setTextInputState","authorInputRef","useRef","textInputRef","authorClasses","control","invalid","textClasses","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","trim","onAddQuote","author","text","isLoading","loading","LoadingSpinner","htmlFor","type","id","ref","onChange","rows","actions","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","data"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kFCK3JC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCkF/BC,EA/EG,SAACL,GACjB,MAAgDM,mBAAS,MAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA4CF,mBAAS,MAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMC,EAAiBC,mBACjBC,EAAeD,mBA2BrB,IAMME,EAAa,UAAMZ,IAAQa,QAAd,aACI,IAArBR,EAA6BL,IAAQc,QAAU,IAE3CC,EAAW,UAAMf,IAAQa,QAAd,aACI,IAAnBN,EAA2BP,IAAQc,QAAU,IAE/C,OACE,cAAC,EAAD,UACE,uBAAMf,UAAWC,IAAQgB,KAAMC,SAvCnC,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzC,GAA6B,KAAzBF,EAAcI,QAAwC,KAAvBD,EAAYC,OAG7C,OAFAlB,GAAoB,QACpBE,GAAkB,GAGS,KAAzBY,EAAcI,OAKS,KAAvBD,EAAYC,OAKhB1B,EAAM2B,WAAW,CAAEC,OAAQN,EAAeO,KAAMJ,IAJ9Cf,GAAkB,GALlBF,GAAoB,IAyBpB,UACGR,EAAM8B,WACL,qBAAK7B,UAAWC,IAAQ6B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK/B,UAAWa,EAAhB,UACE,uBAAOmB,QAAQ,SAAf,oBACA,uBACEC,KAAK,OACLC,GAAG,SACHC,IAAKzB,EACL0B,SA3BkB,WAC1B7B,GAAoB,SA6BhB,sBAAKP,UAAWgB,EAAhB,UACE,uBAAOgB,QAAQ,OAAf,kBACA,0BACEE,GAAG,OACHG,KAAK,IACLF,IAAKvB,EACLwB,SAjCgB,WACxB3B,GAAkB,SAmCd,qBAAKT,UAAWC,IAAQqC,QAAxB,SACE,wBAAQtC,UAAU,MAAlB,+B,uBCxDKuC,UAhBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAChBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,aAEd,CAACJ,IAIJ,OACE,cAAC,EAAD,CAAWd,UAAsB,YAAXc,EAAsBjB,WAJtB,SAACsB,GACvBN,EAAYM","file":"static/js/6.2a94dcf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__z_JnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3SUBk\",\"loading\":\"QuoteForm_loading__3l2ap\",\"control\":\"QuoteForm_control__TJX94\",\"actions\":\"QuoteForm_actions__26Xkr\",\"invalid\":\"QuoteForm_invalid__1_ZO0\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [authorInputState, setAuthorInputState] = useState(null);\n  const [textInputState, setTextInputState] = useState(null);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    if (enteredAuthor.trim() === \"\" && enteredText.trim() === \"\") {\n      setAuthorInputState(false);\n      setTextInputState(false);\n      return;\n    }\n    if (enteredAuthor.trim() === \"\") {\n      setAuthorInputState(false);\n\n      return;\n    }\n    if (enteredText.trim() === \"\") {\n      setTextInputState(false);\n      return;\n    }\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const authorChangeHandler = () => {\n    setAuthorInputState(true);\n  };\n  const textChangeHandler = () => {\n    setTextInputState(true);\n  };\n  const authorClasses = `${classes.control} ${\n    authorInputState === false ? classes.invalid : \"\"\n  }`;\n  const textClasses = `${classes.control} ${\n    textInputState === false ? classes.invalid : \"\"\n  }`;\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={authorClasses}>\n          <label htmlFor=\"author\">Author</label>\n          <input\n            type=\"text\"\n            id=\"author\"\n            ref={authorInputRef}\n            onChange={authorChangeHandler}\n          />\n        </div>\n        <div className={textClasses}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            id=\"text\"\n            rows=\"5\"\n            ref={textInputRef}\n            onChange={textChangeHandler}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\">Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nimport { useEffect } from \"react\";\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status]);\r\n  const addQuoteHandler = (data) => {\r\n    sendRequest(data);\r\n  };\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}